{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","tasks","setTasks","useState","newTask","setNewTask","editingIndex","setEditingIndex","React","createElement","className","type","value","onChange","e","target","placeholder","onClick","addTask","trim","updatedTasks","map","task","index","key","editTask","filter","_","i","deleteTask","reportWebVitals","onPerfEntry","Function","then","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode"],"mappings":"sNAuDeA,MApDf,WACE,MAAOC,EAAOC,GAAYC,mBAAS,KAC5BC,EAASC,GAAcF,mBAAS,KAChCG,EAAcC,GAAmBJ,mBAAS,MAwBjD,OACEK,IAAAC,cAAA,OAAKC,UAAU,OACbF,IAAAC,cAAA,UAAI,cACJD,IAAAC,cAAA,OAAKC,UAAU,iBACbF,IAAAC,cAAA,SACEE,KAAK,OACLC,MAAOR,EACPS,SAAWC,GAAMT,EAAWS,EAAEC,OAAOH,OACrCI,YAAY,iBAEdR,IAAAC,cAAA,UAAQQ,QAhCEC,KACd,GAAuB,KAAnBd,EAAQe,OAAZ,CACA,GAAqB,OAAjBb,EAAuB,CACzB,MAAMc,EAAe,IAAInB,GACzBmB,EAAad,GAAgBF,EAC7BF,EAASkB,GACTb,EAAgB,WAEhBL,EAAS,IAAID,EAAOG,IAEtBC,EAAW,OAsBqC,OAAjBC,EAAwB,SAAW,QAEhEE,IAAAC,cAAA,UACGR,EAAMoB,IAAI,CAACC,EAAMC,IAChBf,IAAAC,cAAA,MAAIe,IAAKD,GACND,EACDd,IAAAC,cAAA,UAAQQ,QAASA,IArBTM,KAChBlB,EAAWJ,EAAMsB,IACjBhB,EAAgBgB,IAmBeE,CAASF,IAAQ,QACxCf,IAAAC,cAAA,UAAQQ,QAASA,IA1BPM,KAClBrB,EAASD,EAAMyB,OAAO,CAACC,EAAGC,IAAMA,IAAML,KAyBPM,CAAWN,IAAQ,eCnCvCO,MAZSC,IAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,KAAKC,IAAkD,IAAjD,OAAEC,EAAM,OAAEC,EAAM,OAAEC,EAAM,OAAEC,EAAM,QAAEC,GAASL,EACpEC,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAOP,GACPQ,EAAQR,MCDDS,IAASC,WAAWC,SAASC,eAAe,SACpDC,OACHpC,IAAAC,cAACD,IAAMqC,WAAU,KACfrC,IAAAC,cAACT,EAAG,QAOR8B,K","file":"static/js/main.6185f29c.chunk.js","sourcesContent":["import React, { useState } from \"react\";\nimport \"./App.css\";\n\nfunction App() {\n  const [tasks, setTasks] = useState([]);\n  const [newTask, setNewTask] = useState(\"\");\n  const [editingIndex, setEditingIndex] = useState(null);\n\n  const addTask = () => {\n    if (newTask.trim() === \"\") return;\n    if (editingIndex !== null) {\n      const updatedTasks = [...tasks];\n      updatedTasks[editingIndex] = newTask;\n      setTasks(updatedTasks);\n      setEditingIndex(null);\n    } else {\n      setTasks([...tasks, newTask]);\n    }\n    setNewTask(\"\");\n  };\n\n  const deleteTask = (index) => {\n    setTasks(tasks.filter((_, i) => i !== index));\n  };\n\n  const editTask = (index) => {\n    setNewTask(tasks[index]);\n    setEditingIndex(index);\n  };\n\n  return (\n    <div className=\"app\">\n      <h1>To-Do List</h1>\n      <div className=\"input-section\">\n        <input\n          type=\"text\"\n          value={newTask}\n          onChange={(e) => setNewTask(e.target.value)}\n          placeholder=\"Enter a task\"\n        />\n        <button onClick={addTask}>{editingIndex !== null ? \"Update\" : \"Add\"}</button>\n      </div>\n      <ul>\n        {tasks.map((task, index) => (\n          <li key={index}>\n            {task}\n            <button onClick={() => editTask(index)}>Edit</button>\n            <button onClick={() => deleteTask(index)}>Delete</button>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}